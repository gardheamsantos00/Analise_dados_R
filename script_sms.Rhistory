install.packages ("lmtest")
install.packages ("BSDA")
install.packages ("agricolae")
install.packages ("car")
install.packages("tm")
install.packages("SnowballC")
install.packages("wordcloud")
install.packages("e1071")
install.packages("e1071")
install.packages("gmodels")
library(tm)
library(SnowballC)
library(wordcloud)
library(e1071)
library(gmodels)
sms_df <- read.csv("sms_spam.csv",stringsAsFactors=FALSE)
sms_df <- read.csv("sms_spam.csv",stringsAsFactors=FALSE)
getwd()
setwd( "C:/Users/Aluno/Documents/Rnapratica")
sms_df <- read.csv("sms_spam.csv",stringsAsFactors=FALSE)
sms_df$type <- factor(sms_df$type)
table(sms_df$type)
sms_corpus <- Vcorpus(VectorSource(sms_df$text)) #cria colecao CORPUS pra mineracao da base
library(tm)
sms_corpus <- VCorpus(VectorSource(sms_df$text)) #cria colecao CORPUS pra mineracao da base
print(sms_corpus)
sms_corpus_clean <- tm_map(sms_corpus,content_transformer(tolowe)) #aplica metodo de limpeza e converte para minusculo
sms_corpus_clean <- tm_map(sms_corpus,content_transformer(tolower)) #aplica metodo de limpeza e converte para minusculo
sms_corpus_clean <- tm_map(sms_corpus_clean,removeNumbers) #aplica limpeza e remove numeros
stopwords()
sms_corpus_clean <- tm_map(sms_corpus_clean,removeWords,stopwords()) #remove stop words
sms_corpus_clean <- tm_map(sms_corpus_clean,removePunctuation) #remove pontuacao
sms_corpus_clean <- tm_map(sms_corpus_clean,stripWhitespace) #remove espacos extra em branco
wordStem(c("learn","learned","learning","learns")) #indica sufixo para remover
sms_corpus_clean <- tm_map(sms_corpus_clean,stemDocument) #remove sufixos
lapply(sms_corpus[1:3],as.character) #comparando bases
lapply(sms_corpus_clean[1:3],as.character) #comparando bases
